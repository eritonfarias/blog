<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>Klaus Laube - rest</title><link>https://klauslaube.com.br/</link><description>Python, Django e desenvolvimento Web</description><lastBuildDate>Thu, 15 Mar 2018 18:15:00 -0300</lastBuildDate><item><title>Swagger na prática</title><link>https://klauslaube.com.br/2018/03/15/swagger-na-pratica.html</link><description>&lt;p&gt;&lt;img class="align-left" src="/images/blog/swaggerhub-logo.png" width="180" height="180" title="Logotipo do SwaggerHub" alt="Logotipo do SwaggerHub"&gt;&lt;/p&gt;
&lt;p&gt;Voltamos a falar de &lt;a href="https://klauslaube.com.br/tag/apis.html" title="Leia mais sobre APIs"&gt;&lt;em&gt;APIs&lt;/em&gt;&lt;/a&gt;, e voltamos a falar sobre especificações.
Para continuar o assunto sobre &lt;a href="https://klauslaube.com.br/2017/11/25/swagger-e-o-open-api-initiative.html" title="Swagger e o OAI"&gt;&lt;em&gt;Swagger&lt;/em&gt;&lt;/a&gt;,
hoje vamos abordar o tema de uma maneira prática. Afinal, é com ela que a gente vê as principais
vantagens de utilizar &lt;em&gt;Swagger&lt;/em&gt; + &lt;em&gt;Open API Spec&lt;/em&gt;, em relação aos concorrentes.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Klaus Peter Laube</dc:creator><pubDate>Thu, 15 Mar 2018 18:15:00 -0300</pubDate><guid isPermaLink="false">tag:klauslaube.com.br,2018-03-15:/2018/03/15/swagger-na-pratica.html</guid><category>desenvolvimento</category><category>web</category><category>rest</category><category>microservices</category><category>apis</category><category>swagger</category><category>oai</category></item><item><title>Swagger e o Open API Initiative</title><link>https://klauslaube.com.br/2017/11/25/swagger-e-o-open-api-initiative.html</link><description>&lt;p&gt;&lt;img class="align-left" src="/images/blog/oai-logo.png" width="180" height="180" title="Logotipo Open API Initiative" alt="Logotipo Open API Initiative"&gt;&lt;/p&gt;
&lt;p&gt;Já falamos sobre &lt;a href="https://klauslaube.com.br/tag/raml.html" title="Leia mais sobre RAML"&gt;&lt;em&gt;RAML&lt;/em&gt;&lt;/a&gt; aqui no &lt;em&gt;blog&lt;/em&gt;. Uma maneira
de descrever &lt;em&gt;APIs&lt;/em&gt;, facilitando a vida de clientes, fornecedores, e até mesmo
máquinas. Acontece que há uma alternativa muito mais popular,
chamada &lt;a href="https://swagger.io/" title="The world's most popular API tooling"&gt;&lt;em&gt;Swagger&lt;/em&gt;&lt;/a&gt;,
que na minha opinião tem por principal ponto positivo ser base para a criação da
&lt;a href="https://github.com/OAI/OpenAPI-Specification" title="The OpenAPI Spec repository"&gt;&lt;em&gt;OpenAPI Specification&lt;/em&gt;&lt;/a&gt;.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Klaus Peter Laube</dc:creator><pubDate>Sat, 25 Nov 2017 20:52:00 -0200</pubDate><guid isPermaLink="false">tag:klauslaube.com.br,2017-11-25:/2017/11/25/swagger-e-o-open-api-initiative.html</guid><category>desenvolvimento</category><category>web</category><category>rest</category><category>microservices</category><category>apis</category><category>swagger</category><category>oai</category></item><item><title>Documentando a sua API com raml2html</title><link>https://klauslaube.com.br/2017/09/16/documentando-sua-api-com-raml2html.html</link><description>&lt;p&gt;&lt;img class="align-left" src="/images/blog/raml-logo.jpg" width="180" height="180" title="Logotipo do RAML" alt="Logotipo do RAML"&gt;&lt;/p&gt;
&lt;p&gt;Uma das coisas mais legais em relação ao &lt;a href="https://klauslaube.com.br/tag/raml.html" title="Leia mais sobre RAML"&gt;&lt;em&gt;RAML&lt;/em&gt;&lt;/a&gt;
(e afins) é a diversidade de ferramentas que existem em seu ecossistema.
Embora a especificação por si cumpra o seu papel, são elas que trazem
"mais cores" aos resultados práticos de ter uma &lt;em&gt;spec&lt;/em&gt; para a sua &lt;a href="https://klauslaube.com.br/tag/apis.html" title="Leia mais sobre API"&gt;&lt;em&gt;API&lt;/em&gt;&lt;/a&gt;.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Klaus Peter Laube</dc:creator><pubDate>Sat, 16 Sep 2017 00:15:00 -0300</pubDate><guid isPermaLink="false">tag:klauslaube.com.br,2017-09-16:/2017/09/16/documentando-sua-api-com-raml2html.html</guid><category>desenvolvimento</category><category>web</category><category>rest</category><category>apis</category><category>raml</category><category>nodejs</category></item><item><title>Ramilificando as suas APIs</title><link>https://klauslaube.com.br/2017/01/31/ramilificando-as-suas-apis.html</link><description>&lt;p&gt;&lt;img class="align-left" src="/images/blog/raml-logo.png" width="180" height="180" title="Logotipo do RAML" alt="Logotipo do RAML"&gt;&lt;/p&gt;
&lt;p&gt;Você já tem a sua &lt;a href="https://klauslaube.com.br/tag/apis.html" title="Leia mais sobre APIs"&gt;&lt;em&gt;API&lt;/em&gt;&lt;/a&gt;! Ela é &lt;a href="https://klauslaube.com.br/tag/rest.html" title="Leia mais sobre REST"&gt;&lt;em&gt;REST&lt;/em&gt;&lt;/a&gt;,
performa muito bem, e todos os seus aplicativos estão
conversando com a mesma. Vem uma oportunidade de negócio de abrí-la para consumo
de parceiros. Agora não basta só a técnica perfeita, você precisa de especificação, documentações,
exemplos de uso e validadores para garantir que os contratos da sua &lt;em&gt;API&lt;/em&gt; não sofram alterações drásticas,
deixando seu cliente na mão.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Klaus Peter Laube</dc:creator><pubDate>Tue, 31 Jan 2017 21:30:00 -0200</pubDate><guid isPermaLink="false">tag:klauslaube.com.br,2017-01-31:/2017/01/31/ramilificando-as-suas-apis.html</guid><category>desenvolvimento</category><category>web</category><category>rest</category><category>microservices</category><category>apis</category><category>raml</category></item><item><title>Construindo APIs em Django com Restless</title><link>https://klauslaube.com.br/2017/01/06/construindo-apis-em-django-com-restless.html</link><description>&lt;p&gt;&lt;img class="align-left" src="/images/blog/rest-api-logo.png" width="180" height="180" title="API Rest" alt="API Rest"&gt;&lt;/p&gt;
&lt;p&gt;Construir &lt;em&gt;APIs&lt;/em&gt; &lt;a href="https://klauslaube.com.br/tag/rest.html" title="Leia mais sobre REST"&gt;&lt;em&gt;REST&lt;/em&gt;&lt;/a&gt; em
&lt;a href="https://klauslaube.com.br/tag/django.html" title="Leia mais sobre Django"&gt;&lt;em&gt;Django&lt;/em&gt;&lt;/a&gt; nos dias atuais é uma
tarefa no máximo corriqueira. Com a ajuda de bibliotecas consagradas, como
&lt;a href="http://www.django-rest-framework.org/"&gt;&lt;em&gt;Django REST Framework&lt;/em&gt;&lt;/a&gt; e
&lt;a href="https://django-tastypie.readthedocs.io/en/latest/"&gt;&lt;em&gt;Tastypie&lt;/em&gt;&lt;/a&gt;,
e utilizando toda a abstração que envolve os &lt;em&gt;Models&lt;/em&gt; do &lt;em&gt;framework&lt;/em&gt;, é
possível ter &lt;em&gt;endpoints&lt;/em&gt; respondendo em questão de minutos.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Klaus Peter Laube</dc:creator><pubDate>Fri, 06 Jan 2017 10:45:00 -0200</pubDate><guid isPermaLink="false">tag:klauslaube.com.br,2017-01-06:/2017/01/06/construindo-apis-em-django-com-restless.html</guid><category>desenvolvimento</category><category>web</category><category>apis</category><category>python</category><category>django</category><category>rest</category><category>restless</category></item><item><title>REST - Parte 2</title><link>https://klauslaube.com.br/2016/05/20/rest-parte-2.html</link><description>&lt;p&gt;&lt;img class="align-left" src="/images/blog/rest-logo.png" width="180" height="180" title="Logotipo REST" alt="Logotipo REST"&gt;&lt;/p&gt;
&lt;p&gt;No &lt;a href="https://klauslaube.com.br/2016/01/06/rest-parte-1.html" title="Leia a parte 1"&gt;&lt;em&gt;post&lt;/em&gt; anterior&lt;/a&gt;, demos uma pequena introdução
ao conceito de &lt;em&gt;REST&lt;/em&gt; e fizemos um raso comparativo com o seu "rival", o &lt;em&gt;SOAP&lt;/em&gt;.
Nesse artigo falaremos mais sobre como interagir com &lt;em&gt;APIs&lt;/em&gt; &lt;em&gt;REST&lt;/em&gt; utilizando
os verbos do protocolo &lt;em&gt;HTTP&lt;/em&gt;, e a biblioteca &lt;a href="http://www.hug.rest/" title="Embrace APIs of the future"&gt;&lt;em&gt;hug&lt;/em&gt;&lt;/a&gt;,
que nos ajudará a ilustrar como uma &lt;em&gt;API&lt;/em&gt; funciona na prática.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Klaus Peter Laube</dc:creator><pubDate>Fri, 20 May 2016 12:35:00 -0300</pubDate><guid isPermaLink="false">tag:klauslaube.com.br,2016-05-20:/2016/05/20/rest-parte-2.html</guid><category>desenvolvimento</category><category>rest</category><category>microservices</category><category>apis</category></item><item><title>REST - Parte 1</title><link>https://klauslaube.com.br/2016/01/06/rest-parte-1.html</link><description>&lt;p&gt;&lt;img class="align-left" src="/images/blog/soap-vs-rest.png" width="180" height="180" title="SOAP vs REST" alt="SOAP vs REST"&gt;&lt;/p&gt;
&lt;p&gt;Em tempos onde os &lt;a href="http://www.infoq.com/br/news/2015/04/microservices-current-state" title="O estado da arte em micro serviços"&gt;microservices&lt;/a&gt; ganham cada vez mais força, e &lt;a href="https://dev.twitter.com/rest/public" title="Conheça a API do Twitter"&gt;aplicações de sucesso&lt;/a&gt; liberam a sua &lt;em&gt;API&lt;/em&gt; para desenvolvedores construírem um ecossistema ao redor delas, não considerar seguir boas práticas na construção de um serviço pode ser uma tomada de decisão arriscada, tanto no quesito do negócio, quanto no quesito técnico.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Klaus Peter Laube</dc:creator><pubDate>Wed, 06 Jan 2016 13:00:00 -0200</pubDate><guid isPermaLink="false">tag:klauslaube.com.br,2016-01-06:/2016/01/06/rest-parte-1.html</guid><category>desenvolvimento</category><category>rest</category><category>microservices</category><category>apis</category></item></channel></rss>